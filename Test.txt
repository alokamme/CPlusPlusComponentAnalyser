element
unit
element
cpp:include
pcdata
#
element
cpp:directive
pcdata
include
element
cpp:file
pcdata
<iostream>
element
using
pcdata
using 
element
namespace
pcdata
namespace 
element
name
pcdata
std
pcdata
;
element
class
pcdata
class
element
name
pcdata
Person
element
block
pcdata
{
element
private
element
public
pcdata
public:
        
element
decl_stmt
element
decl
element
type
element
name
pcdata
string
element
name
pcdata
profession
pcdata
;
element
decl_stmt
element
decl
element
type
element
name
pcdata
int
element
name
pcdata
age
pcdata
;
element
constructor
element
name
pcdata
Person
element
parameter_list
pcdata
()
element
member_init_list
pcdata
: 
element
call
element
name
pcdata
profession
element
argument_list
pcdata
(
element
argument
element
expr
element
literal
pcdata
"unemployed"
pcdata
)
pcdata
, 
element
call
element
name
pcdata
age
element
argument_list
pcdata
(
element
argument
element
expr
element
literal
pcdata
16
pcdata
)
element
block
pcdata
{ }
element
function
element
type
element
name
pcdata
void
element
name
pcdata
display
element
parameter_list
pcdata
()
element
block
pcdata
{
             
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"My profession is: "
element
operator
pcdata
<<
element
name
pcdata
profession
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"My age is: "
element
operator
pcdata
<<
element
name
pcdata
age
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
pcdata
walk
element
argument_list
pcdata
()
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
pcdata
talk
element
argument_list
pcdata
()
pcdata
;
pcdata

        }
element
function
element
type
element
name
pcdata
void
element
name
pcdata
walk
element
parameter_list
pcdata
()
element
block
pcdata
{ 
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"I can walk."
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
pcdata
 }
element
function
element
type
element
name
pcdata
void
element
name
pcdata
talk
element
parameter_list
pcdata
()
element
block
pcdata
{ 
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"I can talk."
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
pcdata
 }
pcdata
}
pcdata
;
element
comment
pcdata
// MathsTeacher class is derived from base class Person.
element
class
pcdata
class 
element
name
pcdata
MathsTeacher
element
super
pcdata
: 
element
specifier
pcdata
public
element
name
pcdata
Person
element
block
pcdata
{
element
private
element
public
pcdata
public:
       
element
function
element
type
element
name
pcdata
void
element
name
pcdata
teachMaths
element
parameter_list
pcdata
()
element
block
pcdata
{ 
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"I can teach Maths."
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
pcdata
 }
pcdata
}
pcdata
;
element
comment
pcdata
// Footballer class is derived from base class Person.
element
class
pcdata
class 
element
name
pcdata
Footballer
element
super
pcdata
: 
element
specifier
pcdata
public
element
name
pcdata
Person
element
block
pcdata
{
element
private
element
public
pcdata
public:
       
element
function
element
type
element
name
pcdata
void
element
name
pcdata
playFootball
element
parameter_list
pcdata
()
element
block
pcdata
{ 
element
expr_stmt
element
expr
element
name
pcdata
cout
element
operator
pcdata
<<
element
literal
pcdata
"I can play Football."
element
operator
pcdata
<<
element
name
pcdata
endl
pcdata
;
pcdata
 }
pcdata
}
pcdata
;
element
function
element
type
element
name
pcdata
int
element
name
pcdata
main
element
parameter_list
pcdata
()
element
block
pcdata
{
     
element
decl_stmt
element
decl
element
type
element
name
pcdata
MathsTeacher
element
name
pcdata
teacher
pcdata
;
element
expr_stmt
element
expr
element
name
element
name
pcdata
teacher
element
operator
pcdata
.
element
name
pcdata
profession
element
operator
pcdata
=
element
literal
pcdata
"Teacher"
pcdata
;
element
expr_stmt
element
expr
element
name
element
name
pcdata
teacher
element
operator
pcdata
.
element
name
pcdata
age
element
operator
pcdata
=
element
literal
pcdata
23
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
element
name
pcdata
teacher
element
operator
pcdata
.
element
name
pcdata
display
element
argument_list
pcdata
()
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
element
name
pcdata
teacher
element
operator
pcdata
.
element
name
pcdata
teachMaths
element
argument_list
pcdata
()
pcdata
;
element
decl_stmt
element
decl
element
type
element
name
pcdata
Footballer
element
name
pcdata
footballer
pcdata
;
element
expr_stmt
element
expr
element
name
element
name
pcdata
footballer
element
operator
pcdata
.
element
name
pcdata
profession
element
operator
pcdata
=
element
literal
pcdata
"Footballer"
pcdata
;
element
expr_stmt
element
expr
element
name
element
name
pcdata
footballer
element
operator
pcdata
.
element
name
pcdata
age
element
operator
pcdata
=
element
literal
pcdata
19
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
element
name
pcdata
footballer
element
operator
pcdata
.
element
name
pcdata
display
element
argument_list
pcdata
()
pcdata
;
element
expr_stmt
element
expr
element
call
element
name
element
name
pcdata
footballer
element
operator
pcdata
.
element
name
pcdata
playFootball
element
argument_list
pcdata
()
pcdata
;
element
return
pcdata
return 
element
expr
element
literal
pcdata
0
pcdata
;
pcdata

}
